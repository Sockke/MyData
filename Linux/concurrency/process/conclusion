[什么是进程]?
  1. 同操作系统一样, 进程也是一种抽象.
  在硬件层面, 进程是对处理器与虚拟存储器的一种抽象;
  在应用层面, 进程是对运行中的程序的抽象.
  这会给我们制造2个假象, 分别是进程独占处理器资源, 进程独占虚拟存储器资源,
  这也是为什么说进程是资源分配的基本单位
  2. 进程也是系统通过先描述, 后组织的.
  先描述, 是说进程本身是通过PCB来进行描述的, PCB其实就是一个结构体
  后组织, 进程是通过一个双向链表来进行组织调度的

[什么是线程]?
  1. 线程是进程的一部分, 是轻量级的进程.
  在windows上, 底层实现了线程的机制, 是进程的一部分.
  在Linux上, 底层没有线程的概念, Linux线程依然是通过PCB进行描述, 
  本质上仍然是进程, 只不过是共享资源的方式不同罢了.
  比如说有4个线程的进程, 在windows上就是, 这个进程描述符对应的结构体中有指向这四个
  线程的指针, 在Linux上, 会创建4个进程然后指定一下他们共享资源的方式.
  2. cpu在进行调度是是以线程为单位的, 因此线程是cpu调度的基本单位

[进程与线程的区别]:
  1. 进程是资源分配的基本单位, 线程是cpu调度的基本单位
  2. 进程有独立的地址空间, 而线程之间共享进程中的地址空间
  3. 进程地址空间独立, 他创建时消耗的资源大, 进程切换的消耗也很大,
  因为要涉及虚拟地址空间的切换;
  线程共享虚拟地址空间, 创建时消耗的资源小, 线程切换的消耗也比较小,
  因为不涉及虚拟地址空间的切换




