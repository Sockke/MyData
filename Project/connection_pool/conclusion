1. 数据库连接池
为了提高数据库的访问效率, 除了在服务器端增加数据库缓存之外,
还可以增加连接池, 对数据库的连接进行管理, 提高数据库的访问效率.

2. 本质
数据库连接池之所以能够提高数据库访问的效率, 它的本质在于减少除了sql语句额外的消耗,
这些消耗主要是指tcp三次握手建立连接, 四次挥手断开连接回收资源, 频繁的与数据库建立
连接, 会大大降低数据库的访问性能
通过池式管理, 数据库连接池会维护一定数量的连接, 根据用户的请求和释放来分配和回收连接,
这样大大减少了频繁的进行网络请求所带来的额外消耗, 提高了数据库的访问性能

3. 功能点
1.主要围绕4个变量来管理这个连接池
初始连接数量: 连接池建立时所维护的初始的连接数量
2.最大连接数量: 连接池动态增加连接时的最大连接数量
当空闲连接队列中没有连接时, 会动态的增加连接, 但是不能超过最大连接数量
3.最长请求连接时间: 用户请求连接时的最长超时时间
用户等待新的空闲连接, 不能超过最长请求连接时间, 否则请求连接超时失败
4.最长空闲连接时间: 连接在空闲连接队列中的最长时间
当空闲连接队列中的连接数量大于初始连接数量, 并且某些连接长时间得不到分配
则需要从空闲连接队列中进行移除

4. 技术点
Mysql编程, 单例模式(数据库连接池), C++容器(queue)
C++11多线程编程, 多线程的同步通信与互斥(生产者消费者模型), CAS原子操作
RAII(智能指针, 守卫锁), lambda表达式, 绑定器

--压力测试

1.单线程
              1000    5000    10000

无连接池      0.64s   3.5s    7.05s
有连接池      0.23s   1.08s   2.14s

2.多线程(4)
              1000    5000    10000

无连接池      0.42s   2.05s   3.85s
有连接池      0.16s   0.72s   1.74s

