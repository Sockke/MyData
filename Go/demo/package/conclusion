go中包的作用:
1. 分类管理代码, 便于维护
2. 利用首字母大小写来控制包中内容的访问权限, 便于保护

go中包的使用:
1. 包的定义, 包本质上是一个目录, 同级目录下, package定义的包名要一致
2. 包的引用, 包同目录一样可以嵌套, 在go文件中通过import来导入包
包的搜索通过2个环境变量(内置GOROOT, 自定义GOPATH)
同级目录下的go文件之间不需要import包
3. 包的使用, 通过包名 + "." + 内容
4. package main是程序入口包, main是入口程序, 其他go程序不能引用



init()函数:
1. init()和main()是go中的保留函数, 
init()为初始化函数, 在包被导入时执行
main()为程序入口函数, 在main程序中init比main先执行

init()函数的特点:
1. init()函数在包被导入时执行
2. 同一go源文件中可以有多个init()函数, 执行的顺序与定义的顺序相同
3. 不同go源文件中init()函数的执行顺序与包导入的顺序相同
具有依赖关系的嵌套包, 根据递归式进行调用(导入顺序a->b->c, init调用顺序c->b->a)


import _ "./pack1/pack12"
1. 导入pack12包, 但是只执行包中的init函数, 不能调用或使用包中的函数或变量
