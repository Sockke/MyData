ECF: 异常控制流(Exceptional Control Flow)
  为了能够让系统对处理器状态的变化做出合理的反应
  系统利用控制流突变(跳转, 调用, 返回)来处理
  这种突变被称为ECF

[异常]:
  异常就是控制流的突变, 用来相应处理器状态的变化

  当应用程序在执行某一条指令的时候, 触发了某个事件而引起异常
  事件: 系统状态的变化

  [异常处理]:
    异常号: 为每种异常类型分配的了异常号(非负整数)
    异常表: 系统启动时分配并初始化的一张异常表, 异常表中存放着异常处理程序的地址
      异常表的起始地址: 存储在CPU的 异常表基址寄存器中
  [异常类别]:
    中断, 陷阱, 故障, 终止
    异步发生: 不直接由指令造成, 是由外部IO设备的信号的结果
      中断: 
        处理器中断管脚电压变高引起中断
    同步发生: 由指定指令造成
      陷阱:
        系统调用引起陷阱
        系统调用: 在用户程序与内核之间提供的接口
        比如说读写文件(read/write), 创建退出进程(fork/exit)...
      故障:
        由错误情况引起故障
        比如说缺页异常, 先处理后终止
      终止:
        由致命错误引起终止
        比如说硬件错误
  [过程]
      当处理器产生异常时, 会根据异常类型将返回地址压栈(可能是当前指令或下一条指令地址)
      系统通过异常表的起始地址与异常号来确定异常处理程序的地址 
      然后跳转到指定的异常处理程序来进行异常处理
      然后将返回地址出栈, 继续执行

    
    
[用户态到内核态切换的过程]:
  1. 获取内核栈的栈顶指针: 读取tr寄存器, 访问TSS段(esp0)来获取内核栈指针
  2. 保存当前进程的上下文及寄存器信息: 在内核栈中保存当前上下文及寄存器信息
  3. 加载内核栈信息: 内核代码写入CS寄存器, 内核栈指针写入esp寄存器, 内核入口点写入eip寄存器

  TSS: task status segment
  cs: codes segment
  //[方式]: (陷阱)系统调用, (故障)异常, (终止)外部设备中断
  
