结构型设计模式:
代理模式, 装饰器模式, 适配器模式
结构型设计模式, 都有一个特点, 就是通过组合的方式来解决结构上的设计问题
代理模式: 
需要代理谁, 就将谁作为对象组合在代理类中, 
管理对象的操作或访问权限
装饰器模式:
需要装饰谁, 就将谁作为对象组合在装饰器类中,
为不同的对象装饰相同的功能
适配器模式:
需要适配谁, 就将谁作为最想组合在适配器类中,
为不兼容的对象添加接口, 使其兼容, 能够让不兼容的部分一起工作

行为型设计模式:
观察者模式
行为型设计模式, 主要关注的是对象之间的通信
观察者模式, 又叫做观察-监听/发布-订阅模式,
一组监听的对象依赖一个观察的对象的通知, 监听者主要是负责对消息的处理,
观察者负责消息的订阅, 以及消息的发布通知等
